package eg.edu.alexu.csd.oop.calculator.cs08;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;

import eg.edu.alexu.csd.oop.calculator.Calculator;

public class MyCalculator implements Calculator {

	private StringBuilder firstNum = new StringBuilder() ;
	private StringBuilder secondNum = new StringBuilder();
	private char operation;
	private double x ;
	private double y ;
	RuntimeException e = new RuntimeException();
	ArrayList<String> history = new ArrayList<String>();
	private int currentIndex = 0 ;
	File memory = new File("memory.txt");
	
	
	@Override
	public void input(String s) {
		// TODO Auto-generated method stub
		this.addHistory(s);
		this.readFormula(s);
		this.x = this.readNumber(this.firstNum.toString());
		this.y = this.readNumber(this.secondNum.toString());
	}

	@Override
	public String getResult() {
		// TODO Auto-generated method stub
		if(this.operation == '+'){
			return String.valueOf(this.x + this.y);
		}else if(this.operation == '-'){
			return String.valueOf(this.x - this.y);
		}else if(this.operation == '*'){
			return String.valueOf(this.x * this.y);
		}else if(this.operation == '/'){
			if(this.y == 0){
				throw e;
			}
			return String.valueOf(this.x / this.y);
		}else{
			throw e;
		}
	}

	@Override
	public String current() {
		// TODO Auto-generated method stub
		if(this.currentIndex >= this.history.size()){
			return null;
		}
		return this.history.get(this.currentIndex);
	}

	@Override
	public String prev() {
		// TODO Auto-generated method stub
		if(this.currentIndex > 0){
			this.currentIndex--;
			return this.history.get(this.currentIndex);
		}
		return null;
	}

	@Override
	public String next() {
		// TODO Auto-generated method stub
		if(this.currentIndex<4){
			this.currentIndex++;
			return this.history.get(this.currentIndex);
		}
		return null;
	}

	@Override
	public void save() {
		// TODO Auto-generated method stub
		try {
			PrintWriter p = new PrintWriter(this.memory);
			for(int i = 0 ; i< this.history.size() ;i++){
				p.println(this.history.get(i));
			}
			p.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@Override
	public void load() {
		// TODO Auto-generated method stub
		try {
			this.history.clear();
			FileReader fr = new FileReader(this.memory);
			BufferedReader br = new BufferedReader(fr);
			try {
				String temp = br.readLine();
				while(temp != null){
					this.history.add(temp);
					temp = br.readLine();
				}
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	private void addHistory(String s){
		if(this.history.size()==5){
			this.history.remove(0);
		}
		this.history.add(s);
		this.currentIndex = this.history.size()-1;
	}
	
	private void readFormula(String s){
		int i = 0 ;
		this.firstNum = new StringBuilder();
		this.secondNum = new StringBuilder();
		while(s.charAt(i) != '+' && s.charAt(i) != '-'
			  && s.charAt(i) != '*' && s.charAt(i) != '/'){
			this.firstNum.append(s.charAt(i));
			i++;
		}
		this.operation = s.charAt(i);
		i++;
		while(i < s.length()){
			this.secondNum.append(s.charAt(i));
			i++;
		}
	}
	
	private double readNumber(String s){
		double num = 0;
		int p = s.length(); //point initial place
		for(int i = 0 ; i < s.length() ; i++){
			if(s.charAt(i) == '.'){
				p = i ;
				break;
			}
		}
		if(p != s.length()){
			int t = -1;
			for(int i = p+1 ; i < s.length() ; i++){
				num = num + (s.charAt(i)-'0') * Math.pow(10, t);
				t--;
			}
		}
		int t = 0;
		for(int i = p-1 ; i > -1 ; i--){
			num = num + (s.charAt(i)-'0') * Math.pow(10, t);
			t++;
		}
		return num;
	}

	public void printHistory(){
		System.out.println("The size is :" + this.history.size());
		System.out.println("-----------------------------------");
		System.out.println("The index is :" + this.currentIndex);
		System.out.println("----------------------------------");
		for(int i = 0 ; i <this.history.size() ; i++){
			System.out.println(this.history.get(i));
		}
		System.out.println("----------------------------------");
	}
	
}
